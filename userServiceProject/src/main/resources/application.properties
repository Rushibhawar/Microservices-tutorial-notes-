server.port=8081
spring.datasource.name=user_microservices
spring.datasource.url=jdbc:mysql://localhost:3306/user_microservices
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=Mysql@123
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

spring.application.name=USER-SERVICE

#eureka.instance.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#configurint the config server client
spring.config.import=configserver:http://localhost:8085/
#we can also write => spring.config.import=optional:configserver:http://localhost:8085/

#configurations for the resileince4j circuit breaker
#first we will add the configs for the actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#resilience4j 
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.register-health-indicator=true
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.wait-duration-in-open-state=6
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.sliding-window-size=10
resilience4j.circuitbreaker.instances.RATING-HOTEL-BREAKER.sliding-window-type=COUNT_BASED

#retry
resilience4j.retry.instances.RATING-HOTEL-RETRY-SERVICE.max-attempts=3
resilience4j.retry.instances.RATING-HOTEL-RETRY-SERVICE.wait-duration=500ms

#rateLimiter
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=400ms
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=0ms

#okta configs for api gateway
okta.oauth2.issuer=https://dev-47078417.okta.com/oauth2/default
okta.oauth2.audience=api://default
okta.oauth2.client-id=0oa9di26pvs0eT1NU5d7
okta.oauth2.client-secret=nEkMdMhdka7I50O55cup62wt7qaPxqC8p62xYd4y
okta.oauth2.scopes=openid, profile, email, offline_access

#security
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-47078417.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider=okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope=internal
spring.security.oauth2.client.registration.my-internal-client.client-id=0oa9di26pvs0eT1NU5d7
spring.security.oauth2.client.registration.my-internal-client.client-secret=nEkMdMhdka7I50O55cup62wt7qaPxqC8p62xYd4y

spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-47078417.okta.com/oauth2/default


